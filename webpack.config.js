'use strict';

const NODE_ENV = process.env.NODE_ENV;
const dotenv = require('dotenv');
const dotEnvVars = dotenv.config();

const webpack = require('webpack');
const fs = require('fs');
const path = require('path'),
      join = path.join,
      resolve = path.resolve;

const environmentEnv = dotenv.config({
  path: join(root, 'config', `${NODE_ENV}.config.js`),
  silent: true
});
const envVariables = Object.assign({}, dotEnvVars, environmentEnv);

const root = resolve(__dirname);
const src = join(root, 'src');
const modules = join(root, 'node_modules');
const dest = join(root, 'dist');

const getConfig = require('hjs-webpack');
const isDev = (NODE_ENV === 'development' || (process.argv[1] || '').indexOf('hjs-dev-server') > -1);


let config = getConfig({
  in: join(__dirname, 'src/app.js'),
  out: join(__dirname, 'dist'),
  clearBeforeBuild: true,
  isDev: isDev
});

//* #TODO: understand how this string is constructed and how it should be different between dev and prod
const cssModulesNames = `${isDev ? '[path][name]__[local]__' : '' }[hash:base64:5]`;
const matchCssLoaders = /(^|!)(css-loader)($|!)/;

//* Find a loader whose 'loader' string matches a supplied regex or string </pk>
const findLoader = (loaders, match) => {
  const found = loaders.filter( l => l && l.loader && l.loader.match(match));
  return found ? found[0] : null;
};

//* Find the default css file loader generated by hjs-webpack
const cssloader = findLoader(config.module.loaders, matchCssLoaders);

//* Clone out the default loader, but retarget it to css module filenames in the /src dir
const newloader = Object.assign({}, cssloader, {
  test: /\.module\.css$/,
  include: [src],
  //* #TODO: understand this
  loader: cssloader.loader.replace(matchCssLoaders, `$1$2?modules&localIdentName=${cssModulesNames}$3`)
})
config.module.loaders.push(newloader);

//* Modify the default css loader to exclude css module file names 
cssloader.test = new RegExp(`[^module]${cssloader.test.source}`);
cssloader.loader = newloader.loader;

//* Add a loader for css files in the 'modules' dir
config.module.loaders.push({
  test: /\.css$/,
  include: [modules],
  loader: 'style!css'
});

config.postcss = [
  require('precss')({}),
  require('autoprefixer')({}),
  require('cssnano')({})
];

module.exports = config;
